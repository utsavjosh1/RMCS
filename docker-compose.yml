version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: rmcs_db
      POSTGRES_USER: rmcs_user
      POSTGRES_PASSWORD: rmcs_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rmcs_user -d rmcs_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for session management
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RMCS Backend
  backend:
    build:
      context: ./rmcs-backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://rmcs_user:rmcs_password@postgres:5432/rmcs_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PORT=3001
      - CORS_ORIGIN=http://localhost:3000,http://127.0.0.1:3000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./rmcs-backend/src:/app/src
      - ./rmcs-backend/prisma:/app/prisma
    restart: unless-stopped

  # RMCS Frontend (Next.js)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_SOCKET_URL=http://localhost:3001
      - NEXT_PUBLIC_API_URL=http://localhost:3001/api
    depends_on:
      - backend
    volumes:
      - ./src:/app/src
      - ./public:/app/public
      - ./components.json:/app/components.json
      - ./next.config.js:/app/next.config.js
      - ./tailwind.config.js:/app/tailwind.config.js
      - ./postcss.config.js:/app/postcss.config.js
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: 